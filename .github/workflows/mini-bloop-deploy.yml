# This is a basic workflow that is manually triggered

name: Deploying to mini-bloop

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
  push:
    branches:
    - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy_to_server:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checkout repo to runner
    - name: Checkout Repo
      uses: actions/checkout@v2
      with:
        ref: main
        token: ${{ secrets.DEPLOY_PAT }}
    # Copying files and artifacts via SSH
    - name: Configure SSH and create staging files
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.MINI_BLOOP_SSH_KEY }}" > ~/.ssh/staging.key
        chmod 600 ~/.ssh/staging.key
        echo "${{ secrets.MINI_BLOOP_HOST_KEY_PUB }}" > ~/.ssh/known_hosts
        echo "DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }}" > .env
        cat >>~/.ssh/config <<END
        Host staging
          HostName ${{ secrets.MINI_BLOOP_HOST_NAME }}
          User ${{ secrets.MINI_BLOOP_SSH_USER }}
          IdentityFile ~/.ssh/staging.key
        END
        
    - name: Rsync repo
      run: |
        ssh staging 'mkdir -p ${{ secrets.MINI_BLOOP_REMOTE_DIR }}'
        rsync -aPz ./ staging:${{ secrets.MINI_BLOOP_REMOTE_DIR }}

    - name: Run remote docker chain
      run: |
        ssh staging 'cd ${{ secrets.MINI_BLOOP_REMOTE_DIR }} && docker-compose --force-recreate up -d && docker prune'
